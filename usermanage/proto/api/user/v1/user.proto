syntax = "proto3";

package user.v1;

import "google/api/annotations.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "proto/api/common/v1/common.proto";
import "validate/validate.proto";

option go_package = "usermanage/gen/proto/api/user/v1;userv1";

service UserService {
  rpc ListUsers(UserListRequest) returns (UserListResponse) {
    option (google.api.http) = {
      get: "/v1/admin/users"
    };
  }

  rpc GetUser(UserRequest) returns (UserResponse) {
    option (google.api.http) = {
      get: "/v1/admin/users/{id}"
    };
  }

  rpc CreateUser(UserCreateRequest) returns (UserResponse) {
    option (google.api.http) = {
      post: "/v1/admin/users"
      body: "*"
    };
  }

  // UpdateUser performs a partial update on a user resource using the provided field mask.
  rpc UpdateUser(UserUpdateRequest) returns (UserResponse) {
    option (google.api.http) = {
      patch: "/v1/admin/users/{id}"
      body: "*"
    };
  }

  // ReplaceUser performs a full replacement of a user resource.
  rpc ReplaceUser(UserReplaceRequest) returns (UserResponse) {
    option (google.api.http) = {
      put: "/v1/admin/users/{id}"
      body: "*"
    };
  }

  rpc DeleteUser(UserDeleteRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/admin/users/{id}",
    };
  }

  rpc ResetUserPassword(UserPasswordResetRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/admin/users/{id}/reset-password"
      body: "*"
    };
  }
}

// protolint:disable ENUM_FIELD_NAMES_PREFIX
enum UserRole {
  ROLE_UNSPECIFIED = 0;
  ADMIN = 1;
  USER = 2;
}

enum UserStatus {
  STATUS_UNSPECIFIED = 0;
  NORMAL = 1;
  DISABLED = 2;
  LOCKED = 3;
}
// protolint:disable ENUM_FIELD_NAMES_PREFIX

message UserPublic {
  string id = 1;
  string username = 2;
  UserRole role = 3;
  UserStatus status = 4;
  string creator = 5;
  string updated_by = 6;
  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp updated_at = 8;
}

message UserListRequest {
  int32 page = 1 [(validate.rules).int32 = {gt: 0, ignore_empty: true}];
  int32 page_size = 2 [(validate.rules).int32 = {gt: 0, ignore_empty: true}];
  string sort_by = 3;
  string sort_order = 4;
  string username = 5;
  UserStatus status = 6 [(validate.rules).enum = {defined_only: true}];
}

message UserListResponse {
  common.v1.PageResponse pagination = 1;
  repeated UserPublic data = 2;
}

message UserRequest {
  string id = 1  [(validate.rules).string.min_len = 1];
}

message UserResponse {
  UserPublic data = 1;
}

message UserCreateRequest {
  string username = 1 [(validate.rules).string.min_len = 1];
  UserRole role = 2 [(validate.rules).enum = {defined_only : true, not_in: [0]}];
  UserStatus status = 3 [(validate.rules).enum = {defined_only : true,not_in: [0]}];
}

message UserUpdateRequest {
  string id = 1 [(validate.rules).string.min_len = 1];
  string username = 2 [(validate.rules).string.min_len = 1];
  UserRole role = 3 [(validate.rules).enum = {defined_only : true, not_in: [0]}];
  UserStatus status = 4 [(validate.rules).enum = {defined_only : true,not_in: [0]}];
  google.protobuf.FieldMask update_mask = 5;
}

message UserReplaceRequest {
  string id = 1 [(validate.rules).string.min_len = 1];
  string username = 2 [(validate.rules).string.min_len = 1];
  UserRole role = 3 [(validate.rules).enum = {defined_only : true, not_in: [0]}];
  UserStatus status = 4 [(validate.rules).enum = {defined_only : true,not_in: [0]}];
}

message UserDeleteRequest {
  string id = 1  [(validate.rules).string.min_len = 1];
}

message UserPasswordResetRequest {
  string id = 1 [(validate.rules).string.min_len = 1];
  string new_password = 2 [(validate.rules).string = {min_len: 8, max_len: 32}];
}
